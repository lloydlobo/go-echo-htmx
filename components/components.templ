package components

import (
	"time"

	"github.com/lloydlobo/go-headcount/model"
	"github.com/lloydlobo/go-headcount/services"
)

css border() {
	border: 1px solid #eeeeee;
	border-radius: 4px;
	margin: 10px;
	padding-top: 30px;
	padding-bottom: 30px;
}

// FIXED DATA

// 404
//  http.Handle("/404", templ.Handler(notFoundComponent(), templ.WithStatus(http.StatusNotFound)))
templ notFoundComponent() {
	<div>404 - Not found</div>
}

// timeComponent
//  http.Handle("/", templ.Handler(timeComponent(time.Now())))
templ timeComponent(d time.Time) {
	<div>{ d.String() }</div>
}

//-----
// COMPONENTS / UI
//-----

// button
templ button(text string, className string ) {
	<button class={ className }>{ text }</button>
}

//
templ filter(filters []services.Filter) {
	<ul class="filters" _="on load set $filter to me">
		for _, filter := range filters {
			<li>
				<a
					class={ templ.KV("selected", filter.Selected) }
					href={ templ.SafeURL(filter.Url) }
					_="on click add .selected to me"
				>
					{ filter.Name }
				</a>
			</li>
		}
	</ul>
}

templ ContactLi(contact model.Contact) {
	<li class="flex gap-2">
		<span class="text-clifford">{ contact.Name }</span>
		<span>{ contact.Email }</span>
	</li>
}

//
templ Page(contacts []model.Contact, filters []services.Filter) {
	<html lang="en" data-framework="htmx">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>headcount</title>
			<link rel="stylesheet" href="/static/css/style.css"/>
			<script type="text/hyperscript" src="/static/hs/start-me-up._hs"></script>
			<script type="text/hyperscript" src="/static/hs/main._hs"></script>
			<script defer src="/static/js/htmx.min.js"></script>
			<script defer src="/static/js/_hyperscript.min.js"></script>
			<style type="text/css">
                input:invalid {
                    border: 3px red solid;
                }
            </style>
			<style type="text/tailwindcss">
			    @layer utilities {
			         .content-auto {
			            content-visibility: auto;
			        }
			    }
			</style>
		</head>
		<body>
			<section class="app">
				<article class="prose">
					<div class="flex gap-1">
						<p>head<b>count</b></p>
						@button("Click me", "text-red-500 p-2 rounded")
						<button
							class="text-clifford"
							_="
                            on pointerdown
                                repeat until event pointerup
                                    set rand to Math.random() * 360
                                    transition
                                        *background-color
                                        to `hsl($rand 100% 90%)`
                                        over 250ms
                                end
                            "
						>beta</button>
					</div>
				</article>
				<span hx-get="/contacts" hx-trigger="load"></span>
				<div class={ "lg:content-auto", border }>
					<span hx-get="/contacts" hx-target="#hx-contacts" hx-swap="beforeend" hx-trigger="load"></span>
					<button hx-post="/contacts" hx-target="#hx-contacts" hx-swap="beforeend">
						New +
					</button>
					<ul id="hx-contacts"></ul>
				</div>
			</section>
			<footer
				class="info"
				_="
                  on load debounced at 10ms
                  call startMeUp()
                  hashCache()
                "
			>
				<p>head<b>count</b></p>
			</footer>
		</body>
	</html>
}

// <p class="hidden">
// 	<label>
// 		Enter your phone number in the format (123) - 456 - 7890 (
// 		<input
// 			name="tel1"
// 			type="tel"
// 			pattern="[0-9]{3}"
// 			placeholder="###"
// 			aria-label="3-digit area code"
// 			size="2"
// 		/>) -
// 		<input name="tel2" type="tel" pattern="[0-9]{3}" placeholder="###" aria-label="3-digit prefix" size="2"/>
// 		-
// 		<input name="tel3" type="tel" pattern="[0-9]{4}" placeholder="####" aria-label="4-digit number" size="3"/>
// 	</label>
// </p>

// <form class="hidden">
// 	<div>
// 		<label for="uname">Choose a username: </label>
// 		<input
// 			type="text"
// 			id="uname"
// 			name="name"
// 			required
// 			size="45"
// 			pattern="[a-z]{4,8}"
// 			title="4 to 8 lowercase letters"
// 		/>
// 		<span class="validity"></span>
// 		<p>Usernames must be lowercase and 4-8 characters in length.</p>
// 	</div>
// 	<div>
// 		<button>Submit</button>
// 	</div>
// </form>
