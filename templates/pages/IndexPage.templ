package pages

templ IndexPage() {
	if !true {
		@HxPage() {
			@IndexContent()
		}
	} else {
		@Base() {
			@IndexContent()
		}
	}
}

templ radioGroup() {
	<div role="radiogroup" aria-labelledby="status-lbl">
		<span id="status-lbl">Status</span>
		<div>
			<div><label><input type="radio" name="color" value="ff0000"/> -</label></div>
			<div><label><input type="radio" name="color" value="00ff00"/> Active</label></div>
			<div><label><input type="radio" name="color" value="0000ff"/> Inactive</label></div>
		</div>
	</div>
}

templ IndexContent() {
	<main>
		// Initial AJAX call to load contacts
		<span hx-get="/contacts" hx-target="#hx-contacts" hx-swap="beforeend" hx-trigger="load"></span>
		<section class="tool-bar">
			<button type="button">Cut</button>
			<button type="button">Copy</button>
			<button type="button">Paste</button>
			<hr aria-orientation="vertical"/>
			<label>Find: <input type="text"/></label>
		</section>
		<div class="box">
			<form class="table rows" hx-post="/contacts" hx-target="#hx-contacts" hx-swap="beforeend">
				<p>
					<label for="name" class="!vh">Name</label>
					<input type="text" id="name" name="name" placeholder="Name" required value="John Doe"/>
				</p>
				<p>
					<label for="phone" class="!vh">Phone</label>
					<input type="tel" id="phone" name="phone" placeholder="Phone" required value="1029384756"/>
				</p>
				<p>
					<label for="email" class="!vh">Email</label>
					<input type="email" id="email" name="email" placeholder="Email" required value="hi@johndoe.com"/>
				</p>
				<p>
					<label for="status" class="!vh">Status</label>
					<input type="checkbox" id="status" name="status" class="margin:0"/>
				</p>
				<!--
                <button type="button" hx-post="/contacts" hx-target="#hx-contacts" hx-swap="beforeend" class={ "btn" }>
                    New +
                </button>
                -->
				<button type="submit">New +</button>
			</form>
		</div>
		<div class={ "lg:content-auto" }>
			<div class="box">
				<ul id="hx-contacts"></ul>
			</div>
		</div>
	</main>
}

/*
Notes:

    // Naive handler:

    func (c *Contacts) pageHandler(w http.ResponseWriter, r *http.Request) {
    	x := fmt.Sprintf("Hello, this is a simple Go server!\n%+v", c)
    	fmt.Fprintln(w, x)
    }

    // Naive handler with template:

    tmpl, err := template.ParseFiles("index.html")
    if err != nil {
    	fmt.Println("Error parsing template:", err)
    	return
    }

    data := struct{ Name string }{"John"}
    if err := tmpl.Execute(w, data); err != nil {
    	fmt.Println("Error executing template:", err)
    }
*/

/*
Notes:

   <p class="hidden">
   	<label>
   		Enter your phone number in the format (123) - 456 - 7890 (
   		<input
   			name="tel1"
   			type="tel"
   			pattern="[0-9]{3}"
   			placeholder="###"
   			aria-label="3-digit area code"
   			size="2"
   		/>) -
   		<input name="tel2" type="tel" pattern="[0-9]{3}" placeholder="###" aria-label="3-digit prefix" size="2"/>
   		-
   		<input name="tel3" type="tel" pattern="[0-9]{4}" placeholder="####" aria-label="4-digit number" size="3"/>
   	</label>
   </p>

   <form class="hidden">
   	<div>
   		<label for="uname">Choose a username: </label>
   		<input
   			type="text"
   			id="uname"
   			name="name"
   			required
   			size="45"
   			pattern="[a-z]{4,8}"
   			title="4 to 8 lowercase letters"
   		/>
   		<span class="validity"></span>
   		<p>Usernames must be lowercase and 4-8 characters in length.</p>
   	</div>
   	<div>
   		<button>Submit</button>
   	</div>
   </form>
*/
